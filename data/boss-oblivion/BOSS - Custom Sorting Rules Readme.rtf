{\rtf1\ansi\ansicpg1252\deff0\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Consolas;}}
{\colortbl ;\red255\green0\blue0;\red163\green21\blue21;}
{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs44 Better Oblivion Sorting Software - Custom User Sorting Rules Readme\par
\cf1\fs22 NOTE: This functionality is only found in the wrinklyninja-user-rules branch. Some of the features explained here are not yet implemented. I have labelled such cases with notes similar to this. Everything will be working by the time I merge the branch back into the trunk though. \par
-WrinklyNinja\cf0\par
While BOSS is able to sort the large number of mods listed in its masterlist without any user input, you may find that you wish to customise the sorting of your mods to a degree. This may be to include mods not listed in the masterlist (eg. temporary plugins or private mods that would serve no benefit being in the masterlist), or it could be to rearrange mods present in the masterlist that can be loaded in a different configuration for different results (eg. LAME and Supreme Magicka files).\par
One possible solution is to edit your copy of the masterlist to include the desired changes. However, as updating your masterlist will remove these edits, this is not very suitable as a long term solution. \par
This is where custom user sorting rules comes in. Using a separate userlist file, you can define as many rules for sorting specific mods or groups of mods as you like, and these rules will not be lost when you update your masterlist. \par
\par
\fs36 Getting Started With The Userlist\par
\fs22 The userlist is the file which contains your custom rules for sorting mods. It is found at "Data\\BOSS\\userlist.txt". If it does not exist, simply create a new text file there with the same name.\par
Within this file, which you can open up in Notepad to edit, you list your rules. These rules allow you to specify plugins or groups of plugins to add to the masterlist, or new positions in the masterlist for plugins or groups that are already in the masterlist.\par
The positions of these plugins and groups are be given in relation to other plugins' and groups' locations. The rule definition syntax is simple and concise, and is explained below.\par
\par
\fs36 Rule Definition Syntax\fs22\par
\cf1 NOTE: Sorting rules involving groups have not yet been implemented at all. I'm not even sure if there's any point in having group addition type rules.\cf0\par
Sorting rules are listed in your userlist.txt. A sorting rule consists of two lines of text:\par
1. The sort line. This consists of a 'sort symbol' which defines the type of rule, and a 'sort mod' or 'sort group' which defines the plugin or group the rule is applied to respectively.\par
2. The match line. This consists of a 'match symbol' which defines how the sort mod/group is ordered, and a 'match mod' or 'match group' which defines what the sort mod/group is ordered relative to. \par
Sort and match mods may be either .esp or .esm files. Sort and match groups are groups of mods that are enclosed by  "\\BeginGroup\\:  Group Name" and "\\EndGroup\\\\" lines.\par
The sort symbols are: \par
?\tab This is used to signify the rule is an 'addition' type, adding a mod not in the masterlist \tab to a specific position in the masterlist.\par
:\tab This is used to signify the rule is an 'override' type, overriding the position of a mod \tab already in the masterlist to a new position specified by the rule.\par
\cf1 NOTE: The next two sort symbols are not yet implemented.\par
\cf0 "\tab This is used to signify the rule is of the 'group' and 'addition' types, as it adds a new \tab group to the masterlist. \cf1 NOTE: I have not decided how new groups should be defined.\cf0\par
*\tab This is used to signify the rule is of the 'group' and 'override' types, as it \tab overrides the \tab position of a group in the masterlist. It cannot be used to add new groups to the \tab masterlist.\cf1\par
\cf0 The match symbols are:\par
>\tab This states that the given sort mod is to load immediately after the specified match \tab mod.\par
<\tab This states that the given sort mod is to load immediately before the specified match \tab mod.\par
\cf1 NOTE: The next two match symbols are not yet implemented.\par
\cf0 /\tab This specifies that the given sort group is to load immediately after the specified match \tab group. \par
|\tab This specifies that the given sort group is to load immediately before the specified \tab match group.\par
You may not mix and match the symbols for mods and groups, nor should a mod and a group appear in the same rule. A mod must be sorted relative to other mods, and a group must be sorted relative to another group, using the appropriate symbols.\par
Some examples:\par
\pard\sl276\slmult1 ?MyModToAdd.esp\par
>LoadAfterThis.esm\par
\par
:MyModToOverride.esp\par
<LoadBeforeThis.esp\par
\par
*L.A.M.E.\par
/Supreme Magicka\par
\par
\pard\sa200\sl276\slmult1 It should be self-evident, but the first example basically says "add MyModToAdd.esp to the masterlist after LoadAfterThis.esm" and the second says "remove MyModToOverride.esp's current position in the masterlist, then add it before LoadBeforeThis.esp". The third example says "remove the group L.A.M.E. and its contents from the masterlist, then add it and its contents before the Supreme Magicka group".\par
\par
\fs36 Defining Rules\fs22\par
You saw how to define simple rules with the examples at the end of the last section. Here are some further notes on defining rules that may not be evident.\par
You do not need to have blank lines between your rules, though it is neater and easier to read, especially when you have lots of rules. Also, plugin filenames are not case-sensitive.\par
Rules are applied in the order they are listed, except that 'load before' rules are applied before 'load after' rules. This means that you can have several rules loading mods before or after the same plugin, eg:\par
\pard\sl276\slmult1 ?Mod3.esp\par
\pard\sa200\sl276\slmult1 >RTT.esp\par
\pard\sl276\slmult1 ?Mod5.esp\par
\pard\sa200\sl276\slmult1 >RTT.esp\par
\pard\sl276\slmult1 ?Mod1.esp\par
\pard\sa200\sl276\slmult1 <RTT.esp\par
\pard\sl276\slmult1 ?Mod4.esp\par
\pard\sa200\sl276\slmult1 >RTT.esp\par
\pard\sl276\slmult1 ?Mod2.esp\par
<RTT.esp\par
\par
will give an order of:\par
\par
Mod1.esp\par
Mod2.esp\par
RTT.esp\par
Mod3.esp\par
Mod5.esp\par
Mod4.esp\par
\par
\pard\sa200\sl276\slmult1\cf1 NOTE: The next section isn't implemented yet, and would be very, very difficult to do with the current implementation of rule application, so I'll probably wait for the masterlist classes to be implemented. If you try to do as the next section says, something will most likely break.\par
To clarify, never have the 'sort mod' of one rule as the 'match mod' of another (or the same) rule.\par
\cf0 You may also have the sort mod of one rule being the match mod of others, so long as it first appears being sorted and is then matched in later rules. Do not have your rules listed so that a rule in which a mod is the match mod precedes a rule in which it is the sort mod. For example:\par
\pard\sl276\slmult1 ?Mod1.esp\par
<LoadBeforeThis.esp\par
\par
:xulAspenWood.esp\par
>Mod1.esp\par
\par
?Mod2.esp\par
\pard\sa200\sl276\slmult1 <Mod1.esp\par
will order the mods as:\par
\pard\sl276\slmult1 Mod2.esp\par
Mod1.esp\par
xulAspenWood.esp\par
\pard\sa200\sl276\slmult1 LoadBeforeThis.esp\par
\cf1 NOTE: This functionality doesn't add anything new really, since you can do the same if you order your rules properly, eg:\par
\pard\sl276\slmult1 ?Mod2.esp\par
<LoadBeforeThis.esp\par
?Mod1.esp\par
<LoadBeforeThis.esp\par
:xulAspenWood.esp\par
<LoadBeforeThis.esp\par
\par
\pard\sa200\sl276\slmult1 will have the same effect as before. Allowing rule-dependent rules just makes it easier, and prevents everything screwing up if you do it by accident.\par
\cf0 When using a mix of mod and group rules, be very careful to ensure that none of the sort mods are contained in any of the sort groups. \b You cannot have a mod sorted twice. \b0 Attempting to do so will result in an incorrect load order.\cf1\par
\cf0\par
\fs36 Applying Custom User Sorting Rules\fs22\par
When BOSS is run, it first updates your masterlist, if you have told it to do so (either by running BOSS -u or by running the "BOSS - Update Masterlist.bat" file). It then looks for the userlist.txt file. If not found, it will simply go on to sort your mods. If found, the rules it contains will be read and then applied to the masterlist.txt before your mods are sorted. It will also print messages to your BOSSlog.txt near the top, in a section headed "Userlist Messages". There are two types of messages you can find:\par
1. A success message, in the form of '"MyMod.esp" loaded before/after "Load_This.esp/m"\par
2. A failure message. This will only occur for 'addition' type rules, if BOSS finds that the sort mod is already present in the masterlist. In this case, the message will be of the form '"MyMod.esp" already present in masterlist.txt. Custom sorting rule skipped.'\par
Rules that are successfully applied stay in the masterlist until you next update it. This has two effects:\par
1. The first time you apply an 'addition' type rule to your masterlist, you can get a success message, if the sort mod isn't already present. However, when you run BOSS after that, you will always get a failure message for that rule, because it has already been added. If you then update your masterlist and the updated version doesn't contain the sort mod, you will get the success message again, and the process repeats.\par
2. To undo a sorting rule, simply remove the rule from userlist.txt, and then update your masterlist.\cf2\f1\fs19\par
\cf0\f0\fs22\par
\fs36 Compatibility With BOSS Master List Manager (BOMM)\par
\fs22 Compatibility with BOMM has not been tested. However, as BOMM includes similar functionality, it would be advisable to only use one method of implementing custom sorting rules until a definite compatibility status has been determined, unless you are specifically interested in helping test the compatibility of the two. \par
Currently, BOSS does not support defining comment lines. Therefore, if you use that feature of BOMM, you are probably better off using BOMM to implement custom sorting rules. Since BOSS and BOMM were written independently, there will be differences in the implementation of equivalent features, so use the program that is best suited for your needs when it comes to custom sorting rules.\par
\pard\sl276\slmult1\par
}
 